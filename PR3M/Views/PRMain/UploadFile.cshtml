@using PR3M.Common
@model PR3M.DBModel.Material
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UploadFile</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    @Scripts.Render("~/bundles/modernizr")
    <style type="text/css">
        .row-2 {
            padding: 0rem 15rem;
            display: flex;
        }

        .container.home-back {
            padding-left: 59.5rem;
        }

        a.back {
            font-size: 19px;
        }

        form {
            width: 50%;
        }

        .form-group.heosui {
            padding-top: 6.5rem;
        }

        h4 {
            font-size: 30px;
            color: orange;
            font-family: sans-serif;
        }

        input#fileInput {
            font-size: 18px;
        }

        .form-group {
            margin: 1rem 0rem;
        }

        label.control-label.col-md-2 {
            font-size: 21px;
        }

        input#materialNameInput, textarea.text-area, select#CategoryId {
            width: 80%;
            margin: 1rem 0rem;
            font: 500 16px sans-serif;
        }

        .black-text, input.form-control, input#mimeTypeInput, input#sizeInput {
            width: 80%;
            margin: 1rem 0rem;
            height: 20px;
            font: 600 16px sans-serif;
        }

        select#CategoryId {
            height: 25px;
            font: 500 17px sans-serif;
        }

        input.btn.btn-default {
            padding: 0.5rem 2rem;
            font-size: 18px;
            border: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("Create", "PRMain", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @*@Html.AntiForgeryToken()*@

        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-10">
                    <h4>Tải một tệp mới lên</h4>
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    <input type="file" name="fileInput" id="fileInput" @*onchange="myFunction()"*@ />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MaterialName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control", @id = "materialNameInput" } })
                    @Html.ValidationMessageFor(model => model.MaterialName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PostId, "Folder", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.PostId, new { @Value = ViewBag.currentFolderId })
                    <input type="text" value="@ViewBag.currentFolderName" readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsHilde, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsHilde)
                        @Html.ValidationMessageFor(model => model.IsHilde, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsPublic)
                            @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            @*<div class="form-group heosui">
                    @Html.LabelFor(model => model.MaterialsDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.MaterialsDescription, new { htmlAttributes = new { @class = "text-area" } })
                        @Html.ValidationMessageFor(model => model.MaterialsDescription, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.MIMEType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MIMEType, new { htmlAttributes = new { @class = "form-control", @id = "mimeTypeInput", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MIMEType, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control", @id = "sizeInput", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @*<div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.CreateBy, "Created by", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CreateBy, new { @Value = @ViewBag.currentUserId })
                    <input type="text" class="form-control" value="@ViewBag.currentUser" readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
                </div>
            </div>
            <input type="hidden" name="currentFolderId" value="@ViewBag.currentFolderId" />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" style="color:white;background-color:Highlight" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "Index", new { FolderId = ViewBag.currentFolderId })
    </div>
    <script>
        $(document).ready(function () {
            $('input[id = "fileInput"]').change(function (e) {
                var fileName = e.target.files[0].name;
                //var size = e.target.files[0].
                var extension = fileName.replace(/^.*\./, '');
                var size = parseInt(e.target.files[0].size);
                $('input[id = "materialNameInput"]').val(fileName);
                if (fileName.includes(".")) {
                    $('input[id = "mimeTypeInput"]').val(extension);
                } else {
                    $('input[id = "mimeTypeInput"]').val("file");
                }

                $('input[id = "sizeInput"]').val(size);
            });
        });
    </script>
</body>
</html>
